name: Deploy to Production (EC2)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://room91.org
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build Spring Boot backend
        working-directory: ./BuDongSan
        run: ./gradlew build -x test

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Generate .env.production (prod)
        working-directory: ./frontend
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" > .env.production
          echo "VITE_KAKAO_JS_API_KEY=${{ secrets.KAKAO_JS_API_KEY }}" >> .env.production

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Prepare frontend output for deployment
        run: |
          rm -rf frontend_output
          mkdir -p frontend_output
          cp -r frontend/dist/* frontend_output/

      - name: Check frontend output content
        run: ls -al frontend_output

      - name: Prepare dirs on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 2222
          script: |
            mkdir -p /home/ubuntu/Room91
            mkdir -p /home/ubuntu/Room91/frontend

      - name: Send .env.production to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 2222
          source: "frontend/.env.production"
          target: /home/ubuntu/Room91/frontend
          strip_components: 1

      - name: Deploy frontend files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 2222
          source: "frontend_output/*"
          target: /home/ubuntu/Room91/frontend
          strip_components: 1

      - name: Create backend .env file (prod)
        run: echo "${{ secrets.ENV_PROD }}" > .env

      - name: Send backend .env to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 2222
          source: ".env"
          target: /home/ubuntu/Room91

      - name: Copy backend jar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 2222
          source: "BuDongSan/build/libs/*SNAPSHOT.jar"
          target: /home/ubuntu/Room91

      - name: Restart services on EC2 (prod)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 2222
          script: |
            set -e
            cd /home/ubuntu/Room91
            if command -v docker-compose >/dev/null 2>&1; then
              DC="docker-compose"
            else
              DC="docker compose"
            fi
            $DC down || true
            SPRING_PROFILES_ACTIVE=prod $DC up -d --build
